name: Vercel Preview(Develop) Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  workflow_dispatch:
  push:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-npm.outputs.cache-key }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache npm dependencies
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

  code_analysis:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use cached dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Lint Code
        run: npm run lint
        continue-on-error: true #remove once all errors fixed

  unit_tests:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use cached dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run unit tests
        run: npm run test -- --watch=false --no-progress --browsers=ChromeHeadlessNoSandbox --code-coverage

      - name: Check Code Coverage
        run: |
          COVERAGE=$(npx nyc report --reporter=text-summary | grep 'Lines' | awk '{print $2}' | tr -d '%')
          if (( $(echo "$COVERAGE < 30" | bc -l) )); then
            echo "Code coverage is below 30%. Failing build."
            exit 1
          fi

  build:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use cached dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Build the project
        run: npm run ng build --configuration=development

  Deploy-Preview:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
